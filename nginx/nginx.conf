server {
    listen 80;
    server_name www.cristal-car-order.by;

    # Конфигурация для React приложения (статика)
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html; # Важно для React Router
    }

    # Проксирование всех запросов, начинающихся с /api/, на Tomcat
    # Это стандартный подход: фронтенд делает запросы к /api/...,
    # а Nginx перенаправляет их на бэкенд.
    location /detailing/api/ {
            # proxy_pass: используется имя сервиса 'tomcat' из docker-compose.yml
            # URL должен соответствовать базовому пути, ожидаемому Tomcat.
            # Если вы убрали /detailing из API_BASE_URL в orderApi.ts (см. ниже),
            # то путь здесь должен быть: http://tomcat:8080/detailing/api/
            proxy_pass http://tomcat:8080/detailing/api/;

            # Необходимые заголовки для корректной работы прокси
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    # Можете добавить редирект с HTTP на HTTPS, когда у вас будет SSL-сертификат
    # listen 443 ssl;
    # ssl_certificate /path/to/your/cert.pem;
    # ssl_certificate_key /path/to/your/key.pem;
    # ...
}